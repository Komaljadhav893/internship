 

Example 1:

Input: s = "ABFCACDB"
Output: 2
Explanation: We can do the following operations:
- Remove the substring "ABFCACDB", so s = "FCACDB".
- Remove the substring "FCACDB", so s = "FCAB".
- Remove the substring "FCAB", so s = "FC".
So the resulting length of the string is 2.
It can be shown that it is the minimum length that we can obtain.
Example 2:

Input: s = "ACBBD"
Output: 5
Explanation: We cannot do any operations on the string so the length remains the same.



class Solution:
    def minLength(self, s: str) -> int:

        for c in s:
            if not st:
                st.append(c)
                continue
            if c =='B' and st[-1]=='A':
                st.pop()
            elif c=='D' and st[-1]=='C':
                st.pop()
            else:
                st.append(c)    
        return len(st)        

        
